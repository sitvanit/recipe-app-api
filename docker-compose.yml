# docker compose is a tool that allows us to run our docker image from our project location.
# docker-compose is a wrapper around the docker CLI. It uses a file called docker-compose.yml in order to retrieve parameters.

version: "3"
# That means that we are having a service with the name 'app'
# build - build the service with the docker file in the current directory (.)
# ports - map the port 8000 in my local computer to the image port
# volumes - if we'll change a file in our project, it will automatically will update the image.
services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
# sh means run a shell script with the command (-c) after it.
# Now we can run "docker-compose build"
# "docker-compose build" will read your docker-compose.yml, look for all services containing the build: statement and run a docker build for each one.
# "docker-compose build" will build the services in the docker-compose.yml file.
# "docker build" will build the image defined by Dockerfile.
# after we ran the "docker-compose build" we should run "docker-compose run app sh -c "django-admin.py startproject app .""
# when we install django we get automatically the django-admin
# that script will create files od our django project in the app dir.